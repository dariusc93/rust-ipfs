[package]
authors = ["Darius C", "Rust-IPFS contributors"]
rust-version = "1.70"
edition = "2021"
license = "MIT OR Apache-2.0"
name = "rust-ipfs"
readme = "README.md"
repository = "https://github.com/dariusc93/rust-ipfs"
description = "IPFS node implementation"
version = "0.12.0"

[features]
default = []

experimental_stream = ["dep:libp2p-stream"]

webrtc_transport = ["dep:libp2p-webrtc", "dep:libp2p-webrtc-websys"]

sled_data_store = ["dep:sled"]
redb_data_store = ["dep:redb"]
test_go_interop = []
test_js_interop = []

[workspace.dependencies]
anyhow = "1.0.86"
async-stream = { version = "0.3.5" }
async-trait = { version = "0.1.10" }
asynchronous-codec = "0.7.0"
base64 = { default-features = false, features = ["alloc"], version = "0.22.0" }
byteorder = { version = "1.5.0" }
bytes = "1.7.1"
cid = "0.11.1"
chrono = { version = "0.4.35" }
clap = { version = "4.5.16", features = ["derive"] }
either = { version = "1.13.0" }
fs2 = "0.4.3"
futures = { version = "0.3.30" }
futures-timeout = "0.1.0"
futures-timer = "3.0.0"
getrandom = { version = "0.2.15" }
hickory-resolver = "0.24.1"
hkdf = "0.12.4"
idb = "0.6.3"
indexmap = "2.4.0"
ipld-core = { version = "0.4.1", features = ["serde"] }
ipld-dagpb = "0.2.1"
libp2p = { version = "0.54.1" }
libp2p-allow-block-list = "0.4.0"
libp2p-connection-limits = "0.4.0"
libp2p-relay-manager = { version = "0.3.0", path = "packages/libp2p-relay-manager" }
libp2p-stream = { version = "0.2.0-alpha" }
libp2p-webrtc = { version = "=0.8.0-alpha", features = ["pem"] }
libp2p-webrtc-websys = "0.4.0-alpha"
multibase = "0.9.1"
multihash = "0.19.1"
multihash-codetable = { version = "0.1.3", default-features = false }
multihash-derive = "0.9.0"
p256 = { version = "0.13.2", default-features = false, features = ["ecdsa", "std", "pem"] }
parking_lot = "0.12.3"
pem = { version = "3.0.4" }
quick-protobuf = { version = "0.8.1" }
quick-protobuf-codec = "0.3.1"
rand = "0.8.5"
rand_chacha = "0.3.1"
rcgen = { version = "0.13.1", features = ["pem", "x509-parser"] }
redb = { version = "1.3.0" }
rlimit = "0.10.1"
rust-ipns = { version = "0.6.0", path = "packages/rust-ipns" }
rust-unixfs = { version = "0.5.0", path = "unixfs" }
sec1 = { version = "0.7.3", features = ["pem", "pkcs8"] }
send_wrapper = "0.6.0"
serde = { default-features = false, version = "1.0.209" }
serde_ipld_dagcbor = "0.6.1"
serde_ipld_dagjson = "0.2.0"
serde_json = { default-features = false, version = "1.0.127" }
serde-wasm-bindgen = "0.6"
sha2 = "0.10.8"
simple_x509 = "=1.1.0"
sled = { version = "0.34.7" }
thiserror = { default-features = false, version = "1.0.63" }
tracing = { default-features = false, features = ["log"], version = "0.1.40" }
tracing-futures = { default-features = false, features = [
    "std-future",
    "std",
    "futures-03",
], version = "0.2.5" }

tokio = { default-features = false, version = "1.39.3" }
tokio-stream = { default-features = false, version = "0.1.15" }
tokio-util = { default-features = false, version = "0.7.11" }
unsigned-varint = { version = "0.8.0", features = ["asynchronous_codec"] }
void = { default-features = false, version = "1.0.2" }
wasm-bindgen-futures = { version = "0.4.43" }
web-time = "1.1.0"
zeroize = "1.8.1"


[dependencies]
anyhow.workspace = true
async-stream.workspace = true
async-trait.workspace = true
asynchronous-codec.workspace = true
base64 = { workspace = true }
byteorder = { workspace = true }
bytes = { workspace = true }
chrono.workspace = true
either.workspace = true
futures-timeout.workspace = true
futures.workspace = true
hkdf.workspace = true
indexmap.workspace = true
ipld-core.workspace = true
ipld-dagpb.workspace = true
libp2p-allow-block-list.workspace = true
libp2p-connection-limits.workspace = true
libp2p-relay-manager = { workspace = true }
libp2p-stream = { workspace = true, optional = true }
multibase.workspace = true
multihash.workspace = true
multihash-codetable.workspace = true
multihash-derive.workspace = true
p256.workspace = true
parking_lot.workspace = true
pem.workspace = true
quick-protobuf-codec.workspace = true
quick-protobuf.workspace = true
rand.workspace = true
rand_chacha.workspace = true
rust-ipns = { workspace = true }
rust-unixfs = { workspace = true }
sec1.workspace = true
serde = { features = ["derive"], workspace = true }
serde_ipld_dagcbor.workspace = true
serde_ipld_dagjson.workspace = true
serde_json = { features = ["std"], workspace = true }
sha2.workspace = true
thiserror = { default-features = false, workspace = true }
tracing = { default-features = false, features = ["log"], workspace = true }
tracing-futures = { workspace = true }
unsigned-varint.workspace = true
void = { default-features = false, workspace = true }
web-time.workspace = true
zeroize.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
futures-timer.workspace = true
fs2.workspace = true
hickory-resolver.workspace = true
libp2p = { features = ["gossipsub", "autonat", "relay", "dcutr", "identify", "kad", "websocket", "tcp", "macros", "tokio", "noise", "tls", "ping", "yamux", "dns", "mdns", "ed25519", "secp256k1", "ecdsa", "rsa", "serde", "request-response", "json", "cbor", "rendezvous", "upnp", "quic", ], workspace = true }
libp2p-webrtc = { workspace = true, features = ["tokio", ], optional = true }
rcgen.workspace = true
redb = { workspace = true, optional = true }
rlimit.workspace = true
simple_x509.workspace = true
sled = { workspace = true, optional = true }
tokio = { features = ["full"], workspace = true }
tokio-stream = { workspace = true, features = ["fs"] }
tokio-util = { workspace = true, features = ["full"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
futures-timer = { workspace = true, features = ["wasm-bindgen"] }
getrandom = { workspace = true, features = ["js"] }
idb.workspace = true
libp2p = { features = ["gossipsub", "autonat", "relay", "dcutr", "identify", "kad", "websocket-websys", "webtransport-websys", "macros", "noise", "ping", "yamux", "dns", "ed25519", "secp256k1", "ecdsa", "serde", "request-response", "json", "cbor", "rendezvous", "wasm-bindgen", ], workspace = true }
libp2p-webrtc-websys = { workspace = true, optional = true }
send_wrapper.workspace = true
serde-wasm-bindgen.workspace = true
tokio = { default-features = false, features = ["sync", "macros"], workspace = true }
tokio-stream = { workspace = true, default-features = false }
tokio-util = { workspace = true, default-features = false }
wasm-bindgen-futures.workspace = true

[dev-dependencies]
criterion = { default-features = false, version = "0.5" }
hex-literal = { default-features = false, version = "0.4" }
sha2 = { default-features = false, version = "0.10" }
tokio = { features = ["full"], version = "1" }
rustyline-async = { version = "0.4" }
tracing-subscriber = { default-features = false, features = [
    "fmt",
    "tracing-log",
    "ansi",
    "env-filter",
], version = "0.3" }
rand = { default-features = false, version = "0.8", features = [
    "std",
    "std_rng",
] }
tempfile = "3.12.0"

clap = { workspace = true }

[profile.dev.build-override]
debug = true

[workspace]
members = ["packages/*", "unixfs", "examples/*"]
exclude = ["archived", "packages/libp2p-bitswap-next", "packages/beetle-bitswap-next"]

resolver = "2"
